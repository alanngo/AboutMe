BASIC LINUX COMMANDS
______________________________________________________
echo <ARGS>: print args in the terminal

clear: clears terminal buffer

exit: closes the terminal

pwd: print current working directory

cd <DIR_NAME>: change directory to <DIR_NAME>

ls: list visible files
	-al: list ALL files

cat <FILE_NAME>: reads <FILE_NAME> and prints in terminal

touch <FILE_NAME>: create a blank file named <FILE_NAME>

mkdir <DIR_NAME>: create a directory named <DIR_NAME>

diff <FILE0> <FILE1>: displays the differences between <FILE0> & <FILE1>

chmod <VALUE> <FILE_NAME>: changes permissions for <FILE_NAME>
	<VALUE> in range 000 - 777
	000: minimal permissions for all users
	777: all permisions for all users

rm <FILE_NAME>: deletes <FILE_NAME>
	-f: runs even if <FILE_NAME> doesn't exist
	-r: removes directories and subcontents recursively

alias <ALIAS_NAME>='<COMMAND>': creates an alias that points to <COMMAND>

rmdir <DIR_NAME>: deletes the directory<DIR_NAME>

vim <FILE_NAME>: opens and edit <FILE_NAME> in vim

BUILD/RUN LANGUAGES
_______________________________________________________
Java
	prereqs:
		install openjdk 8
		install java
	build: $javac *.java
	run: $java <MAIN_FILE>
	$java --help for more info

C++
	prereqs:
		install g++
	build: $g++ <CPP_FILES>
	run: $./a.out
	$g++ --help for more info

C
	prereqs:
		install gcc
	build: $gcc <C_FILES>
	run: $./a.out
	$gcc --help for more info

Python
	run: 
		- $python3 <PYTHON_FILE> for python 3
		- $python <PYTHON_FILE> for python 2
	more info:
		- $python3 --help for python 3
		- $python2 --help for python 2

USING MAKEFILES
_______________________________________________________
in makefile:
	tag:
		command
	
	tag1:
		command $(ARG)

terminal: (w/o arguments)
	$ make tag: executes commands under tag

terminal: (w/ arguments)
	$ make tag1 ARG=<VALUE>: executes commands under tag1 w/ specified arguments

INSTALLING PACKAGES
_______________________________________________________
apt install <PACKAGE>: installs <PACKAGE>
apt update: updates software (run before you install anything)
apt upgrade: installs newer versions of existing packages

brew install <PACKAGE>: installs <PACKAGE> for macOS only

SYMBOLS/KEYWORDS
_______________________________________________________
/: root directory
~: user home directory
.: current working directory
..: superdirectory of current working directory
*: all files w/i working directory
*.ext: all files w/i working directory w/ extension .ext
>: writes the command to an output file
<: reads input file into command
sudo: run command as root user

HOW TO INTEGRATE THIS REFERENCE SHEET INTO TERMINAL
_______________________________________________________
1. Open linux terminal
2. $cd ~
3. $touch commands.txt
4. vim commands.txt
5. paste this text into commands.txt using vim commands
6. save and quit
7. $vim .bashrc
8. paste this command (w/o double quotes):  "alias commands='cat ~/commands.txt'"
9. save and quit
10. open a new terminal
Now you can pull up this reference guide by simply typing 'commands'


